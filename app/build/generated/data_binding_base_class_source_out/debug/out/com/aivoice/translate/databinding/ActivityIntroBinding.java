// Generated by view binder compiler. Do not edit!
package com.aivoice.translate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.aivoice.translate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIntroBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout mLLTop;

  @NonNull
  public final LinearLayout mLayoutDots;

  @NonNull
  public final TextView mTxtNext;

  @NonNull
  public final TextView mTxtSkip;

  @NonNull
  public final ViewPager mViewPager;

  private ActivityIntroBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout mLLTop,
      @NonNull LinearLayout mLayoutDots, @NonNull TextView mTxtNext, @NonNull TextView mTxtSkip,
      @NonNull ViewPager mViewPager) {
    this.rootView = rootView;
    this.mLLTop = mLLTop;
    this.mLayoutDots = mLayoutDots;
    this.mTxtNext = mTxtNext;
    this.mTxtSkip = mTxtSkip;
    this.mViewPager = mViewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIntroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIntroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_intro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIntroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mLLTop;
      LinearLayout mLLTop = ViewBindings.findChildViewById(rootView, id);
      if (mLLTop == null) {
        break missingId;
      }

      id = R.id.mLayoutDots;
      LinearLayout mLayoutDots = ViewBindings.findChildViewById(rootView, id);
      if (mLayoutDots == null) {
        break missingId;
      }

      id = R.id.mTxtNext;
      TextView mTxtNext = ViewBindings.findChildViewById(rootView, id);
      if (mTxtNext == null) {
        break missingId;
      }

      id = R.id.mTxtSkip;
      TextView mTxtSkip = ViewBindings.findChildViewById(rootView, id);
      if (mTxtSkip == null) {
        break missingId;
      }

      id = R.id.mViewPager;
      ViewPager mViewPager = ViewBindings.findChildViewById(rootView, id);
      if (mViewPager == null) {
        break missingId;
      }

      return new ActivityIntroBinding((LinearLayout) rootView, mLLTop, mLayoutDots, mTxtNext,
          mTxtSkip, mViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
