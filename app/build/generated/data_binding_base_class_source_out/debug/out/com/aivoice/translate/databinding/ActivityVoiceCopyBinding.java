// Generated by view binder compiler. Do not edit!
package com.aivoice.translate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aivoice.translate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVoiceCopyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText mETInput;

  @NonNull
  public final ImageView mIVBack;

  @NonNull
  public final ImageView mIVRecordVoice;

  @NonNull
  public final ImageView mIVTrans;

  @NonNull
  public final RelativeLayout mRLTranslate;

  @NonNull
  public final Toolbar mToolbar;

  @NonNull
  public final TextView mTxtFromLang;

  @NonNull
  public final TextView mTxtInput;

  @NonNull
  public final TextView mTxtResult;

  @NonNull
  public final TextView mTxtTitle;

  @NonNull
  public final TextView mTxtToLang;

  @NonNull
  public final LinearLayout nativeAds;

  @NonNull
  public final LinearLayout nativeAds1;

  private ActivityVoiceCopyBinding(@NonNull LinearLayout rootView, @NonNull EditText mETInput,
      @NonNull ImageView mIVBack, @NonNull ImageView mIVRecordVoice, @NonNull ImageView mIVTrans,
      @NonNull RelativeLayout mRLTranslate, @NonNull Toolbar mToolbar,
      @NonNull TextView mTxtFromLang, @NonNull TextView mTxtInput, @NonNull TextView mTxtResult,
      @NonNull TextView mTxtTitle, @NonNull TextView mTxtToLang, @NonNull LinearLayout nativeAds,
      @NonNull LinearLayout nativeAds1) {
    this.rootView = rootView;
    this.mETInput = mETInput;
    this.mIVBack = mIVBack;
    this.mIVRecordVoice = mIVRecordVoice;
    this.mIVTrans = mIVTrans;
    this.mRLTranslate = mRLTranslate;
    this.mToolbar = mToolbar;
    this.mTxtFromLang = mTxtFromLang;
    this.mTxtInput = mTxtInput;
    this.mTxtResult = mTxtResult;
    this.mTxtTitle = mTxtTitle;
    this.mTxtToLang = mTxtToLang;
    this.nativeAds = nativeAds;
    this.nativeAds1 = nativeAds1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVoiceCopyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVoiceCopyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_voice_copy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVoiceCopyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mETInput;
      EditText mETInput = ViewBindings.findChildViewById(rootView, id);
      if (mETInput == null) {
        break missingId;
      }

      id = R.id.mIVBack;
      ImageView mIVBack = ViewBindings.findChildViewById(rootView, id);
      if (mIVBack == null) {
        break missingId;
      }

      id = R.id.mIVRecordVoice;
      ImageView mIVRecordVoice = ViewBindings.findChildViewById(rootView, id);
      if (mIVRecordVoice == null) {
        break missingId;
      }

      id = R.id.mIVTrans;
      ImageView mIVTrans = ViewBindings.findChildViewById(rootView, id);
      if (mIVTrans == null) {
        break missingId;
      }

      id = R.id.mRLTranslate;
      RelativeLayout mRLTranslate = ViewBindings.findChildViewById(rootView, id);
      if (mRLTranslate == null) {
        break missingId;
      }

      id = R.id.mToolbar;
      Toolbar mToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mToolbar == null) {
        break missingId;
      }

      id = R.id.mTxtFromLang;
      TextView mTxtFromLang = ViewBindings.findChildViewById(rootView, id);
      if (mTxtFromLang == null) {
        break missingId;
      }

      id = R.id.mTxtInput;
      TextView mTxtInput = ViewBindings.findChildViewById(rootView, id);
      if (mTxtInput == null) {
        break missingId;
      }

      id = R.id.mTxtResult;
      TextView mTxtResult = ViewBindings.findChildViewById(rootView, id);
      if (mTxtResult == null) {
        break missingId;
      }

      id = R.id.mTxtTitle;
      TextView mTxtTitle = ViewBindings.findChildViewById(rootView, id);
      if (mTxtTitle == null) {
        break missingId;
      }

      id = R.id.mTxtToLang;
      TextView mTxtToLang = ViewBindings.findChildViewById(rootView, id);
      if (mTxtToLang == null) {
        break missingId;
      }

      id = R.id.native_ads;
      LinearLayout nativeAds = ViewBindings.findChildViewById(rootView, id);
      if (nativeAds == null) {
        break missingId;
      }

      id = R.id.native_ads1;
      LinearLayout nativeAds1 = ViewBindings.findChildViewById(rootView, id);
      if (nativeAds1 == null) {
        break missingId;
      }

      return new ActivityVoiceCopyBinding((LinearLayout) rootView, mETInput, mIVBack,
          mIVRecordVoice, mIVTrans, mRLTranslate, mToolbar, mTxtFromLang, mTxtInput, mTxtResult,
          mTxtTitle, mTxtToLang, nativeAds, nativeAds1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
