// Generated by view binder compiler. Do not edit!
package com.aivoice.translate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aivoice.translate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVoiceCnotherBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText mETInput;

  @NonNull
  public final ImageView mIVBack;

  @NonNull
  public final ImageView mIVClear;

  @NonNull
  public final ImageView mIVRecordVoice;

  @NonNull
  public final ImageView mIVText;

  @NonNull
  public final ImageView mIVTrans;

  @NonNull
  public final TextView mRLTranslate;

  @NonNull
  public final Toolbar mToolbar;

  @NonNull
  public final TextView mTxtFromLang;

  @NonNull
  public final TextView mTxtInput;

  @NonNull
  public final TextView mTxtResult;

  @NonNull
  public final TextView mTxtTitle;

  @NonNull
  public final TextView mTxtToLang;

  private ActivityVoiceCnotherBinding(@NonNull LinearLayout rootView, @NonNull EditText mETInput,
      @NonNull ImageView mIVBack, @NonNull ImageView mIVClear, @NonNull ImageView mIVRecordVoice,
      @NonNull ImageView mIVText, @NonNull ImageView mIVTrans, @NonNull TextView mRLTranslate,
      @NonNull Toolbar mToolbar, @NonNull TextView mTxtFromLang, @NonNull TextView mTxtInput,
      @NonNull TextView mTxtResult, @NonNull TextView mTxtTitle, @NonNull TextView mTxtToLang) {
    this.rootView = rootView;
    this.mETInput = mETInput;
    this.mIVBack = mIVBack;
    this.mIVClear = mIVClear;
    this.mIVRecordVoice = mIVRecordVoice;
    this.mIVText = mIVText;
    this.mIVTrans = mIVTrans;
    this.mRLTranslate = mRLTranslate;
    this.mToolbar = mToolbar;
    this.mTxtFromLang = mTxtFromLang;
    this.mTxtInput = mTxtInput;
    this.mTxtResult = mTxtResult;
    this.mTxtTitle = mTxtTitle;
    this.mTxtToLang = mTxtToLang;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVoiceCnotherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVoiceCnotherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_voice_cnother, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVoiceCnotherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mETInput;
      EditText mETInput = ViewBindings.findChildViewById(rootView, id);
      if (mETInput == null) {
        break missingId;
      }

      id = R.id.mIVBack;
      ImageView mIVBack = ViewBindings.findChildViewById(rootView, id);
      if (mIVBack == null) {
        break missingId;
      }

      id = R.id.mIVClear;
      ImageView mIVClear = ViewBindings.findChildViewById(rootView, id);
      if (mIVClear == null) {
        break missingId;
      }

      id = R.id.mIVRecordVoice;
      ImageView mIVRecordVoice = ViewBindings.findChildViewById(rootView, id);
      if (mIVRecordVoice == null) {
        break missingId;
      }

      id = R.id.mIVText;
      ImageView mIVText = ViewBindings.findChildViewById(rootView, id);
      if (mIVText == null) {
        break missingId;
      }

      id = R.id.mIVTrans;
      ImageView mIVTrans = ViewBindings.findChildViewById(rootView, id);
      if (mIVTrans == null) {
        break missingId;
      }

      id = R.id.mRLTranslate;
      TextView mRLTranslate = ViewBindings.findChildViewById(rootView, id);
      if (mRLTranslate == null) {
        break missingId;
      }

      id = R.id.mToolbar;
      Toolbar mToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mToolbar == null) {
        break missingId;
      }

      id = R.id.mTxtFromLang;
      TextView mTxtFromLang = ViewBindings.findChildViewById(rootView, id);
      if (mTxtFromLang == null) {
        break missingId;
      }

      id = R.id.mTxtInput;
      TextView mTxtInput = ViewBindings.findChildViewById(rootView, id);
      if (mTxtInput == null) {
        break missingId;
      }

      id = R.id.mTxtResult;
      TextView mTxtResult = ViewBindings.findChildViewById(rootView, id);
      if (mTxtResult == null) {
        break missingId;
      }

      id = R.id.mTxtTitle;
      TextView mTxtTitle = ViewBindings.findChildViewById(rootView, id);
      if (mTxtTitle == null) {
        break missingId;
      }

      id = R.id.mTxtToLang;
      TextView mTxtToLang = ViewBindings.findChildViewById(rootView, id);
      if (mTxtToLang == null) {
        break missingId;
      }

      return new ActivityVoiceCnotherBinding((LinearLayout) rootView, mETInput, mIVBack, mIVClear,
          mIVRecordVoice, mIVText, mIVTrans, mRLTranslate, mToolbar, mTxtFromLang, mTxtInput,
          mTxtResult, mTxtTitle, mTxtToLang);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
